{"version":3,"sources":["components/PostsList/PostsList.tsx","api/api.ts","components/NewCommentForm/NewCommentForm.tsx","api/posts.ts","api/comments.ts","components/PostDetails/PostDetails.tsx","App.tsx","index.tsx"],"names":["PostsList","posts","postId","setPostId","handleButtonOpen","event","currentTarget","name","handleButtonClose","className","map","post","userId","title","id","onClick","type","BASE_URL","NewCommentForm","updateComent","useState","newCommentName","setNewComment","newCommentEmail","setNewCommentEmail","newCommentBody","setNewCommentBody","addComment","a","data","email","body","URL","fetch","method","headers","JSON","stringify","response","json","handleSubmit","preventDefault","onSubmit","value","placeholder","onChange","target","getUserPosts","POST_URL","getPostDetails","postID","DETAILS_URL","COMMENT_URL","getPostComments","PostDetails","postDetails","setPostDetails","postComments","setpostComments","isHidden","setHidden","getDetails","details","useEffect","getComments","comments","deleteComment","comment","App","setPosts","selectedUserId","setSelectedUserId","fetchPosts","postsFromSever","htmlFor","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e47b6385.chunk.js","sourcesContent":["import React from 'react';\nimport './PostsList.scss';\n\ninterface Props {\n  posts: Post[]\n  postId: number,\n  setPostId: (id: number) => void,\n}\n\nexport const PostsList: React.FC<Props> = ({\n  posts,\n  postId,\n  setPostId,\n}) => {\n  const handleButtonOpen = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setPostId(+event.currentTarget.name);\n  };\n\n  const handleButtonClose = () => {\n    setPostId(0);\n  };\n\n  return (\n    <div className=\"PostsList\">\n      <h2>Posts:</h2>\n      <ul className=\"PostsList__list\">\n        {posts.map(post => (\n          <li\n            key={post.id}\n            className=\"PostsList__item\"\n          >\n            <div>\n              <b>\n                User $\n                {post.userId}\n              </b>\n              {post.title}\n            </div>\n            {postId !== post.id\n              ? (\n                <button\n                  name={`${post.id}`}\n                  onClick={handleButtonOpen}\n                  type=\"button\"\n                  className=\"PostsList__button button\"\n                >\n                  Open\n                </button>\n              ) : (\n                <button\n                  name={`${post.id}`}\n                  onClick={handleButtonClose}\n                  type=\"button\"\n                  className=\"PostsList__button button\"\n                >\n                  Close\n                </button>\n              )}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","export const BASE_URL = 'https://mate.academy/students-api';\n","import React, { useState } from 'react';\nimport './NewCommentForm.scss';\nimport { BASE_URL } from '../../api/api';\n\ninterface Props {\n  postId: number,\n  updateComent: () => void;\n}\n\nexport const NewCommentForm: React.FC<Props> = ({ postId, updateComent }) => {\n  const [newCommentName, setNewComment] = useState('');\n  const [newCommentEmail, setNewCommentEmail] = useState('');\n  const [newCommentBody, setNewCommentBody] = useState('');\n\n  const handleNameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setNewComment(event.target.value);\n  };\n\n  const handleEmailChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setNewCommentEmail(event.target.value);\n  };\n\n  const handleBodyChange = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\n    setNewCommentBody(event.target.value);\n  };\n\n  const addComment = async () => {\n    const data = {\n      postId,\n      name: newCommentName,\n      email: newCommentEmail,\n      body: newCommentBody,\n    };\n\n    const URL = `${BASE_URL}/comments`;\n\n    const response = await fetch(URL, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n\n      body: JSON.stringify(data),\n    });\n\n    return response.json();\n  };\n\n  const handleSubmit = async (event: React.FormEvent) => {\n    event.preventDefault();\n    await addComment();\n    setNewComment('');\n    setNewCommentEmail('');\n    setNewCommentBody('');\n    updateComent();\n  };\n\n  return (\n    <form\n      onSubmit={handleSubmit}\n      className=\"NewCommentForm\"\n    >\n      <div className=\"form-field\">\n        <input\n          value={`${newCommentName}`}\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Your name\"\n          className=\"NewCommentForm__input\"\n          onChange={handleNameChange}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <input\n          value={`${newCommentEmail}`}\n          type=\"text\"\n          name=\"email\"\n          placeholder=\"Your email\"\n          className=\"NewCommentForm__input\"\n          onChange={handleEmailChange}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <textarea\n          value={`${newCommentBody}`}\n          name=\"body\"\n          placeholder=\"Type comment here\"\n          className=\"NewCommentForm__input\"\n          onChange={handleBodyChange}\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"NewCommentForm__submit-button button\"\n      >\n        Add a comment\n      </button>\n    </form>\n  );\n};\n","import { BASE_URL } from './api';\n\nexport async function getUserPosts(userId = 0) {\n  let POST_URL = `${BASE_URL}/posts`;\n\n  if (userId !== 0) {\n    POST_URL = `${POST_URL}?userId=${userId}`;\n  }\n\n  const response = await fetch(POST_URL);\n\n  return response.json();\n}\n\nexport async function getPostDetails(postID: number) {\n  const DETAILS_URL = `${BASE_URL}/posts/${postID}`;\n  const response = await fetch(DETAILS_URL);\n\n  return response.json();\n}\n","import { BASE_URL } from './api';\n\nconst COMMENT_URL = `${BASE_URL}/comments`;\n\nexport async function getPostComments(postID = 0) {\n  const response = await fetch(`${COMMENT_URL}?postId=${postID}`);\n\n  return response.json();\n}\n","import React, { useState, useEffect } from 'react';\nimport { NewCommentForm } from '../NewCommentForm';\nimport './PostDetails.scss';\nimport { getPostDetails } from '../../api/posts';\nimport { getPostComments } from '../../api/comments';\nimport { BASE_URL } from '../../api/api';\n\ninterface Props {\n  postId: number,\n}\n\nexport const PostDetails: React.FC<Props> = ({ postId }) => {\n  const [postDetails, setPostDetails] = useState<PostComment>();\n  const [postComments, setpostComments] = useState<PostComment[]>([]);\n  const [isHidden, setHidden] = useState(false);\n\n  const getDetails = async () => {\n    const details = await getPostDetails(postId);\n\n    setPostDetails(details);\n  };\n\n  useEffect(() => {\n    getDetails();\n  }, [postId]);\n\n  const getComments = async () => {\n    const comments = await getPostComments(postId);\n\n    setpostComments(comments);\n  };\n\n  useEffect(() => {\n    getComments();\n  }, [postId]);\n\n  const handleHideButton = () => {\n    setHidden(!isHidden);\n  };\n\n  const deleteComment = async (event: React.MouseEvent<HTMLButtonElement>) => {\n    const URL = `${BASE_URL}/comments/${+event.currentTarget.name}`;\n    const response = await fetch(URL, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n\n    getComments();\n\n    return response.json();\n  };\n\n  return (\n    <div className=\"PostDetails\">\n      <h2>Post details:</h2>\n\n      <section className=\"PostDetails__post\">\n        <p>{postDetails?.body}</p>\n      </section>\n\n      <section className=\"PostDetails__comments\">\n        <button\n          name={`${postDetails?.id}`}\n          type=\"button\"\n          className=\"button\"\n          onClick={handleHideButton}\n        >\n          {isHidden ? 'Show' : 'Hide'}\n        </button>\n        {!isHidden && (\n          <ul className=\"PostDetails__list\">\n            {postComments.map(comment => (\n              <li\n                key={comment.id}\n                className=\"PostDetails__list-item\"\n              >\n                <button\n                  name={`${comment.id}`}\n                  type=\"button\"\n                  className=\"PostDetails__remove-button button\"\n                  onClick={deleteComment}\n                >\n                  X\n                </button>\n                <p>{comment.body}</p>\n              </li>\n            ))}\n          </ul>\n        )}\n      </section>\n\n      <section>\n        <div className=\"PostDetails__form-wrapper\">\n          <NewCommentForm\n            postId={postId}\n            updateComent={getComments}\n          />\n        </div>\n      </section>\n    </div>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\nimport { getUserPosts } from './api/posts';\n\nconst App: React.FC = () => {\n  const [posts, setPosts] = useState<Post[]>([]);\n  const [selectedUserId, setSelectedUserId] = useState(0);\n  const [postId, setPostId] = useState(0);\n\n  const fetchPosts = async () => {\n    const postsFromSever = await getUserPosts(selectedUserId);\n\n    setPosts(postsFromSever);\n  };\n\n  useEffect(() => {\n    fetchPosts();\n  }, [selectedUserId]);\n\n  const handleSelect = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    if (+event.target.value !== selectedUserId) {\n      setSelectedUserId(+event.target.value);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <label htmlFor=\"select\">\n          Select a user: &nbsp;\n\n          <select\n            id=\"select\"\n            className=\"App__user-selector\"\n            value={selectedUserId}\n            onChange={handleSelect}\n          >\n            <option value=\"0\">All users</option>\n            <option value=\"1\">Leanne Graham</option>\n            <option value=\"2\">Ervin Howell</option>\n            <option value=\"3\">Clementine Bauch</option>\n            <option value=\"4\">Patricia Lebsack</option>\n            <option value=\"5\">Chelsey Dietrich</option>\n            <option value=\"6\">Mrs. Dennis Schulist</option>\n            <option value=\"7\">Kurtis Weissnat</option>\n            <option value=\"8\">Nicholas Runolfsdottir V</option>\n            <option value=\"9\">Glenna Reichert</option>\n            <option value=\"10\">Leanne Graham</option>\n          </select>\n        </label>\n      </header>\n\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          <PostsList\n            posts={posts}\n            setPostId={setPostId}\n            postId={postId}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          {postId !== 0\n            && <PostDetails postId={postId} />}\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}